The union method has a time complexity of O(n) and a space complexity of O(n). First, we combined a linked list into a list with a time complexity of O(n).
Second, we created a set from the list with a time complexity of O(1). Then, we did the union operation on the
sets, which have a time complexity of O(len(s)+len(t)) = O(n). After that, we converted the set back into a list
with a time complexity of O(1). Finally, we turned the list into a linked list with a time complexity of O(n). Since the
largest order is linear order, the time complexity stays linear.

The intersection method has a time complexity of O(n^2) and a space complexity of O(n).
First, we combined a linked list into a list with a time complexity of O(n).
Second, we created a set from the list with a time complexity of O(1). Then, we did the intersection operation on the
sets, which have a time complexity of O(len(s) * len(t)) = O(n^2). After that, we converted the set back into a list
with a time complexity of O(1). Finally, we turned the list into a linked list with a time complexity of O(n). Since the
largest order is polynomial order, the time complexity stays O(n^2).